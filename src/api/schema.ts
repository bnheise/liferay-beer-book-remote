/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: operations["getBeersPage"];
    post: operations["postBeer"];
  };
  "/by-external-reference-code/{externalReferenceCode}": {
    get: operations["getByExternalReferenceCode"];
    put: operations["putByExternalReferenceCode"];
    delete: operations["deleteByExternalReferenceCode"];
  };
  "/batch": {
    put: operations["putBeerBatch"];
    post: operations["postBeerBatch"];
    delete: operations["deleteBeerBatch"];
  };
  "/openapi.{type}": {
    get: operations["getOpenAPI"];
  };
  "/{beerId}": {
    get: operations["getBeer"];
    put: operations["putBeer"];
    delete: operations["deleteBeer"];
    patch: operations["patchBeer"];
  };
}

export interface components {
  schemas: {
    Creator: {
      /** @description The author's additional name (e.g., middle name). */
      additionalName?: string;
      /** @description The type of the content. */
      contentType?: string;
      /** @description The author's surname. */
      familyName?: string;
      /** @description The author's first name. */
      givenName?: string;
      /**
       * Format: int64
       * @description The author's ID.
       */
      id?: number;
      /** @description A relative URL to the author's profile image. */
      image?: string;
      /** @description The author's full name. */
      name?: string;
      /** @description A relative URL to the author's user profile. Optional field, can be embedded with nestedFields. */
      profileURL?: string;
      /** @default com.liferay.headless.delivery.dto.v1_0.Creator */
      "x-class-name"?: string;
    };
    Status: {
      /** Format: int32 */
      code?: number;
      label?: string;
      label_i18n?: string;
      /** @default com.liferay.object.rest.dto.v1_0.Status */
      "x-class-name"?: string;
    };
    Facet: {
      facetCriteria?: string;
      facetValues?: components["schemas"]["FacetValue"][];
    };
    FacetValue: {
      /** Format: int32 */
      numberOfOccurrences?: number;
      term?: string;
    };
    PageBeer: {
      /** Format: int64 */
      totalCount?: number;
      /** Format: int64 */
      lastPage?: number;
      items?: components["schemas"]["Beer"][];
      /** Format: int64 */
      pageSize?: number;
      facets?: components["schemas"]["Facet"][];
      /** Format: int64 */
      page?: number;
      actions?: { [key: string]: { [key: string]: string } };
      /** @default PageBeer */
      "x-schema-name"?: string;
    };
    Beer: {
      actions?: { [key: string]: { [key: string]: string } };
      creator?: components["schemas"]["Creator"];
      /** Format: date-time */
      dateCreated?: string;
      /** Format: date-time */
      dateModified?: string;
      externalReferenceCode?: string;
      /** Format: int64 */
      id?: number;
      scopeKey?: string;
      status?: components["schemas"]["Status"];
      /** @default com.liferay.object.rest.dto.v1_0.ObjectEntry */
      "x-class-name"?: string;
      /** @default Beer */
      "x-schema-name"?: string;
      /** Format: double */
      aBV?: number;
      brewer?: string;
      /** Format: double */
      eBC?: number;
      /** Format: double */
      iBU?: number;
      imageUrl?: string;
      name?: string;
      /** Format: int32 */
      price?: number;
      style?: {
        key?: string;
        name?: string;
      };
    };
  };
}

export interface operations {
  getBeersPage: {
    parameters: {
      query: {
        flatten?: string;
        search?: string;
        filter?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["PageBeer"];
          "application/xml": components["schemas"]["PageBeer"];
        };
      };
    };
  };
  postBeer: {
    parameters: {};
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["Beer"];
          "application/xml": components["schemas"]["Beer"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Beer"];
        "application/xml": components["schemas"]["Beer"];
      };
    };
  };
  getByExternalReferenceCode: {
    parameters: {
      path: {
        externalReferenceCode: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["Beer"];
          "application/xml": components["schemas"]["Beer"];
        };
      };
    };
  };
  putByExternalReferenceCode: {
    parameters: {
      path: {
        externalReferenceCode: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["Beer"];
          "application/xml": components["schemas"]["Beer"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Beer"];
        "application/xml": components["schemas"]["Beer"];
      };
    };
  };
  deleteByExternalReferenceCode: {
    parameters: {
      path: {
        externalReferenceCode: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": unknown;
          "application/xml": unknown;
        };
      };
    };
  };
  putBeerBatch: {
    parameters: {
      query: {
        callbackURL?: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": unknown;
        };
      };
    };
    requestBody: {
      content: {
        "application/json": { [key: string]: unknown };
      };
    };
  };
  postBeerBatch: {
    parameters: {
      query: {
        callbackURL?: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": unknown;
        };
      };
    };
    requestBody: {
      content: {
        "application/json": { [key: string]: unknown };
      };
    };
  };
  deleteBeerBatch: {
    parameters: {
      query: {
        callbackURL?: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": unknown;
        };
      };
    };
    requestBody: {
      content: {
        "application/json": { [key: string]: unknown };
      };
    };
  };
  getOpenAPI: {
    parameters: {
      path: {
        type: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": unknown;
          "application/yaml": unknown;
        };
      };
    };
  };
  getBeer: {
    parameters: {
      path: {
        beerId: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["Beer"];
          "application/xml": components["schemas"]["Beer"];
        };
      };
    };
  };
  putBeer: {
    parameters: {
      path: {
        beerId: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["Beer"];
          "application/xml": components["schemas"]["Beer"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Beer"];
        "application/xml": components["schemas"]["Beer"];
      };
    };
  };
  deleteBeer: {
    parameters: {
      path: {
        beerId: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": unknown;
          "application/xml": unknown;
        };
      };
    };
  };
  patchBeer: {
    parameters: {
      path: {
        beerId: string;
      };
    };
    responses: {
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["Beer"];
          "application/xml": components["schemas"]["Beer"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Beer"];
        "application/xml": components["schemas"]["Beer"];
      };
    };
  };
}

export interface external {}
